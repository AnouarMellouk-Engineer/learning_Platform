
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  email: 'email',
  username: 'username',
  password: 'password',
  phone_number: 'phone_number',
  wilaya: 'wilaya',
  picture: 'picture',
  role: 'role'
};

exports.Prisma.UserDetailsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  linkedIn: 'linkedIn',
  x: 'x',
  userId: 'userId'
};

exports.Prisma.CourseScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  price: 'price',
  picture: 'picture',
  type: 'type',
  discount: 'discount',
  categorie: 'categorie',
  level: 'level',
  status: 'status',
  startDate: 'startDate',
  instructorId: 'instructorId'
};

exports.Prisma.OverViewsScalarFieldEnum = {
  id: 'id',
  statement: 'statement',
  type: 'type',
  courseId: 'courseId'
};

exports.Prisma.DetailsScalarFieldEnum = {
  id: 'id',
  week: 'week',
  title: 'title',
  courseId: 'courseId'
};

exports.Prisma.LessonsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  type: 'type',
  duration: 'duration',
  position: 'position',
  weekId: 'weekId'
};

exports.Prisma.OrderScalarFieldEnum = {
  studentId: 'studentId',
  courseId: 'courseId',
  proof: 'proof',
  status: 'status',
  paymentMethod: 'paymentMethod'
};

exports.Prisma.OrderFormScalarFieldEnum = {
  studentId: 'studentId',
  courseId: 'courseId',
  firstName: 'firstName',
  lastName: 'lastName',
  phone: 'phone',
  motivation: 'motivation',
  result: 'result'
};

exports.Prisma.CommentScalarFieldEnum = {
  studentId: 'studentId',
  courseId: 'courseId',
  comment: 'comment',
  rating: 'rating'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  UserDetails: 'UserDetails',
  Course: 'Course',
  OverViews: 'OverViews',
  Details: 'Details',
  Lessons: 'Lessons',
  Order: 'Order',
  OrderForm: 'OrderForm',
  Comment: 'Comment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Full Stack JS\\ElearingPlatform\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Full Stack JS\\ElearingPlatform\\backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\n// generator client {\n//   provider = \"prisma-client-js\"\n//   output   = \"../generated/prisma\"\n// }\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id           String       @id @default(uuid())\n  firstName    String\n  lastName     String\n  email        String       @unique\n  username     String\n  password     String\n  phone_number String\n  wilaya       String\n  picture      String?\n  role         String?      @default(\"user\")\n  details      UserDetails?\n  courses      Course[]\n  coursesS     Course[]     @relation(\"Student\")\n  orders       Order[]\n  orderForms   OrderForm[]\n  Comment      Comment[]\n}\n\nmodel UserDetails {\n  id       String  @id @default(uuid())\n  title    String\n  linkedIn String?\n  x        String?\n  userId   String  @unique\n  user     User    @relation(fields: [userId], references: [id], onDelete: Cascade)\n}\n\nmodel Course {\n  id           String      @id @default(uuid())\n  name         String\n  description  String\n  price        Float\n  picture      String\n  type         String?     @default(\"course\")\n  discount     Float?      @default(0)\n  categorie    String\n  level        String      @default(\"begginer\")\n  status       String      @default(\"not\")\n  startDate    DateTime?\n  instructorId String\n  instructor   User        @relation(fields: [instructorId], references: [id], onDelete: Cascade)\n  overviews    OverViews[]\n  details      Details[]\n  students     User[]      @relation(\"Student\")\n  orders       Order[]\n  orderForms   OrderForm[]\n  Comment      Comment[]\n}\n\nmodel OverViews {\n  id        String @id @default(uuid())\n  statement String\n  type      String\n  courseId  String\n  course    Course @relation(fields: [courseId], references: [id], onDelete: Cascade)\n}\n\nmodel Details {\n  id       String    @id @default(uuid())\n  week     Int\n  title    String\n  courseId String\n  course   Course    @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  lessons  Lessons[]\n}\n\nmodel Lessons {\n  id       String  @id @default(uuid())\n  name     String\n  url      String?\n  type     String  @default(\"video\")\n  duration String?\n  position Int\n  weekId   String\n  week     Details @relation(fields: [weekId], references: [id], onDelete: Cascade)\n}\n\nmodel Order {\n  studentId     String\n  student       User    @relation(fields: [studentId], references: [id], onDelete: Cascade)\n  courseId      String\n  course        Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  proof         String\n  status        String? @default(\"not\")\n  paymentMethod String\n\n  @@id([studentId, courseId])\n}\n\nmodel OrderForm {\n  studentId  String\n  student    User    @relation(fields: [studentId], references: [id], onDelete: Cascade)\n  courseId   String\n  course     Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  firstName  String\n  lastName   String\n  phone      String\n  motivation String\n  result     Boolean @default(true)\n\n  @@id([studentId, courseId])\n}\n\nmodel Comment {\n  studentId String\n  student   User    @relation(fields: [studentId], references: [id], onDelete: Cascade)\n  courseId  String\n  course    Course  @relation(fields: [courseId], references: [id], onDelete: Cascade)\n  comment   String?\n  rating    Int?    @default(5)\n\n  @@id([studentId, courseId])\n}\n",
  "inlineSchemaHash": "a529d5500ad41c2d2ec44b16d5430b2e207bbe1c1f31ef3a56bd6667d8417a6d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_number\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"wilaya\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"details\",\"kind\":\"object\",\"type\":\"UserDetails\",\"relationName\":\"UserToUserDetails\"},{\"name\":\"courses\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToUser\"},{\"name\":\"coursesS\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"Student\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"orderForms\",\"kind\":\"object\",\"type\":\"OrderForm\",\"relationName\":\"OrderFormToUser\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"}],\"dbName\":null},\"UserDetails\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedIn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"x\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserDetails\"}],\"dbName\":null},\"Course\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"picture\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"categorie\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"instructorId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"instructor\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CourseToUser\"},{\"name\":\"overviews\",\"kind\":\"object\",\"type\":\"OverViews\",\"relationName\":\"CourseToOverViews\"},{\"name\":\"details\",\"kind\":\"object\",\"type\":\"Details\",\"relationName\":\"CourseToDetails\"},{\"name\":\"students\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"Student\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"CourseToOrder\"},{\"name\":\"orderForms\",\"kind\":\"object\",\"type\":\"OrderForm\",\"relationName\":\"CourseToOrderForm\"},{\"name\":\"Comment\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToCourse\"}],\"dbName\":null},\"OverViews\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statement\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToOverViews\"}],\"dbName\":null},\"Details\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"week\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToDetails\"},{\"name\":\"lessons\",\"kind\":\"object\",\"type\":\"Lessons\",\"relationName\":\"DetailsToLessons\"}],\"dbName\":null},\"Lessons\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"weekId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"week\",\"kind\":\"object\",\"type\":\"Details\",\"relationName\":\"DetailsToLessons\"}],\"dbName\":null},\"Order\":{\"fields\":[{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToOrder\"},{\"name\":\"proof\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"OrderForm\":{\"fields\":[{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderFormToUser\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CourseToOrderForm\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"motivation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"result\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"studentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"student\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"courseId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"course\",\"kind\":\"object\",\"type\":\"Course\",\"relationName\":\"CommentToCourse\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

